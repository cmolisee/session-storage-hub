import{A as a,S as i}from"./types-68586616.js";const c=(e,n,r,t)=>t.id===chrome.runtime.id&&r.from===e&&r.action===n,u=(e,n,r)=>{if(c(i.Extension,a.Request,e,n)){const t=JSON.parse(JSON.stringify(sessionStorage));return r({error:t?null:"Error retrieving session storage",data:t}),!0}return!1},m=(e,n,r)=>{var t;if(c(i.Extension,a.Update,e,n)){try{Object.entries(((t=e.message)==null?void 0:t.updatedData)??{}).forEach(o=>{sessionStorage.setItem(o[0],o[1])});const s=Object.assign({},sessionStorage);r({error:null,data:s})}catch{r({error:"Error updating session storage data",data:null})}return!0}return!1},g=(e,n,r)=>{if(c(i.Extension,a.Clean,e,n)){try{sessionStorage.clear(),Object.entries(e.message.data).forEach(s=>{sessionStorage.setItem(s[0],s[1])});const t=Object.assign({},sessionStorage);r({error:null,data:t})}catch{r({error:"Error cleaning session storage data",data:null})}return!0}return!1},d=(e,n,r)=>{if(c(i.Extension,a.Clear,e,n)){try{sessionStorage.clear(),r({error:null,data:{}})}catch{r({error:"Error clearing session storage data",data:null})}return!0}return!1},h=(e,n,r)=>{if(c(i.Extension,a.FillStorage,e,n)){try{let t=8;for(;t>0;)try{window.sessionStorage.setItem("@utility-fill-"+window.sessionStorage.length.toString(),"@".repeat(2**t))}catch{t-=1}const s=Object.assign({},sessionStorage);r({error:null,data:s})}catch{r({error:"Error filling session storage.",data:null})}return!0}return!1};function L(e){return e/2777777}const f=(e,n,r)=>{if(c(i.Extension,a.Check,e,n)){try{chrome.storage.sync.get("versionData",t=>{if(!e.message||!e.message.timestamp||e.message.forceCheck||!t||!t.timestamp||L(e.message.timestamp-t.timestamp)>5)fetch("https://api.github.com/repos/cmolisee/session-storage-hub/releases/latest").then(s=>s.json()).then(s=>{const l={isUpToDate:s.tag_name.slice(1)==="5.0.0",timestamp:new Date().getTime(),releaseUrl:s.html_url};r({error:null,data:l})}).catch(s=>console.error("Session Storage Hub:",s));else return r({error:null,data:t}),!0})}catch{r({error:"Error checking for updated release",data:{}})}return!0}return!1},S=(e,n,r)=>{if(c(i.Extension,a.Copy,e,n)){const t=e.message.keys,s={};return Object.entries(sessionStorage).forEach(([o,l])=>{t.includes(o)&&(s[o]=l)}),r({error:null,data:s}),!0}return!1},M=()=>{chrome.runtime.onMessage.removeListener(u),chrome.runtime.onMessage.removeListener(m),chrome.runtime.onMessage.removeListener(g),chrome.runtime.onMessage.removeListener(d),chrome.runtime.onMessage.removeListener(h),chrome.runtime.onMessage.removeListener(f),chrome.runtime.onMessage.removeListener(S),chrome.runtime.onMessage.addListener(u),chrome.runtime.onMessage.addListener(m),chrome.runtime.onMessage.addListener(g),chrome.runtime.onMessage.addListener(d),chrome.runtime.onMessage.addListener(h),chrome.runtime.onMessage.addListener(f),chrome.runtime.onMessage.addListener(S)};M();export{S as copyStorageToClipboard};
