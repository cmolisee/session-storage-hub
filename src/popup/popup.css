:root {
    --alertColor: lightGreen;
    --backgroundColor: white;
    --backgroundHoverColor: black;
    --borderColor: black;
    --buttonBackgroundColor: white;
    --buttonBorderColor: black;
    --buttonHoverBackgroundColor: transparent;
    --buttonHoverBorderColor: black;
    --buttonHoverTextColor: black;
    --buttonTextColor: black;
    --checkedColor: green;
    --textColor: black;
    --uncheckedColor: red;
}

/****** Defaults and Utilities ******/
* {
    background-color: var(--backgroundColor);
    border-color: var(--borderColor);
    box-sizing: border-box;
    color: var(--textColor);
}

body {
    width: 47rem;
    height: 100%;
    overflow: hidden;
}

.hidden {
    display: none !important;
}

.note {
    font-style: italic;
    font-size: 0.8rem;
    margin: 0.325rem 0;
}

.alert {
    border-color: var(--alertColor) !important;
    color: var(--alertColor) !important;
}

.selected {
    background-color: var(--backgroundHoverColor) !important;
    color: var(--backgroundColor) !important;
}

.btn-theme {
    border-color: var(--buttonBorderColor) !important;
    background-color: var(--buttonBackgroundColor) !important;
    color: var(--buttonTextColor) !important;
}

.btn-theme:hover {
    background-color: var(--buttonBackgroundHoverColor) !important;
    border-color: var(--buttonHoverBorderColor) !important;
    color: var(--buttonHoverTextColor) !important;
}
/****** End Defaults and Utilities ******/

.btn {
    border-width: 2px;
    border-style: solid;
    border-radius: 0.325rem;
    cursor: pointer;
    display: inline-block;
    font-weight: 800;
    padding: 0.25rem 1rem;
    margin: 0 0.325rem;
    text-align: center;
}

input[type='checkbox'] {
    appearance: none;
    margin: 0;
    color: var(--checkedColor);
    width: 1.15em;
    height: 1.15em;
    border-radius: 0.15em;
    transform: translateY(-0.065em);
    display: grid;
    place-content: center;
    cursor: pointer;
}

input[type='checkbox']:checked::before {
    transform: scale(1);
}

input[type='checkbox']:not(:checked) {
    box-shadow: inset 1em 1em var(--uncheckedColor);
    clip-path: polygon(
        20% 0%,
        0% 20%,
        30% 50%,
        0% 80%,
        20% 100%,
        50% 70%,
        80% 100%,
        100% 80%,
        70% 50%,
        100% 20%,
        80% 0%,
        50% 30%
    );
}

input[type='checkbox']::before {
    content: '';
    width: 1.15em;
    height: 1.15em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--checkedColor);
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

.extUtil__title,
.extUtil__author {
    margin: 0.325rem auto;
}

.extUtil__notificationBar {
    display: none;
    border-radius: 0.5rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
}

/* create transition for notification bar when display changed to flex */

.extUtil__notification {
    display: flex;
    padding: 0.3125rem;
    align-items: center;
}

.extUtil__notificationIcon {
    height: 100%;
    width: 3rem;
    display: flex;
    border-right-width: 3px;
    border-right-style: solid;
    align-items: center;
    margin-right: 0.5rem;
    justify-content: center;
}

.extUtil__notificationIcon i {
    width: 1.5rem;
    height: 1.5rem;
    background-size: cover;
    background-repeat: no-repeat;
    display: inline-block;
    background-image: url('../icons/notification-48.png');
}

.extUtil__notificationText {
    font-size: 1rem;
    font-weight: 500;
}

.extUtil__content {
    margin-top: 1rem;
}

.extUtil__contentInfo {
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    margin-left: 0.325rem;
}

.extUtil__tabItem {
    display: flex;
    flex-direction: column;
}

.extUtil__tabItemControls {
    margin: 0.625rem 0;
}

.extUtil__tabItemContent {
    margin: 0.25rem;
    border-width: 1px;
    border-style: solid;
    padding: 0.325rem;
    max-width: 100%;
}

.extUtil__tabItemContent em {
    margin-bottom: 0.25rem;
}

.extUtil__table {
    display: grid;
    grid-template-areas: 'list view';
    grid-template-columns: 1fr 3fr;
    height: 65vh;
}

.extUtil__tableList {
    grid-area: list;
    border-right-width: 1px;
    border-right-style: solid;
    padding: 0.325rem;
    overflow-y: auto;
}

.extUtil__ssItem {
    display: flex;
    align-items: center;
    margin: 0.25rem 0;
    font-size: 0.825rem;
}

.extUtil__ssItem p {
    margin: 0 0.25rem;
    font-size: 1rem;
    cursor: pointer;
}

.extUtil__ssItem p.selected {
    border-radius: 0.25rem;
}

.extUtil__tableView {
    grid-area: view;
    margin-left: 1rem;
    font-size: 0.825rem;
    overflow-y: auto;
}

.jsonObj,
.jsonArray {
    display: flex;
    flex-direction: column;
    cursor: pointer;
}

.jsonObj > *,
.jsonArray > * {
    margin-left: 1rem;
}

.jsonObj:has(> .jsonVal) {
    flex-direction: row;
}

.jsonKey::after {
    content: ':';
}

.jsonKey:has(> .jsonObj.hidden)::after {
    content: ':\00a0';
}

.jsonVal {
    word-break: break-all;
}